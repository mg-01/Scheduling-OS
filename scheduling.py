# -*- coding: utf-8 -*-
"""Scheduling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xbD98Wcc84ictpusu2wH2G84irDPdbO_
"""

#ROUND ROBIN SCHEDULING
Pid=[1,2,3,4]
AT=[0,4,2,1]
BT=[5,1,2,4]
TQ=2
CT=[0 for i in range(len(AT))]
t=0
rq=[]
for i in range(1,len(AT)):
  for j in range(0,i):
    if AT[i]<AT[j]:
      temp1=AT[i]
      temp2=BT[i]
      temp3=Pid[i]
      for i in range(i,j,-1):
        AT[i]=AT[i-1]
        BT[i]=BT[i-1]
        Pid[i]=Pid[i-1]
      AT[j]=temp1
      BT[j]=temp2
      Pid[j]=temp3
B=BT.copy()
x=-1
while True:
  for i in range(len(AT)):
    if AT[i]<=t and BT[i]>0 and i not in rq and i!=x:
      rq.append(i)
  if x!=-1:
    rq.append(x)
  if len(rq)==0:
    break
  if BT[rq[0]]>=TQ:
     BT[rq[0]]-=TQ
     t+=TQ
  elif BT[rq[0]]<TQ:
     t+=BT[rq[0]]
     BT[rq[0]]=0
  if BT[rq[0]]==0:
     CT[rq[0]]=t
     x=-1
  else:
     x=rq[0]
  rq.pop(0)
TAT=[CT[i]-AT[i] for i in range(len(AT))]
WT=[TAT[i]-B[i] for i in range(len(AT))]
mydata=[]
for i in range(len(AT)):
  mydata.append([Pid[i],AT[i],B[i],CT[i],WT[i],TAT[i]])
head=["Pid","AT","BT","CT","WT","TAT"]
from tabulate import tabulate
print(tabulate(mydata, headers=head, tablefmt="grid"))
print("ATAT=",sum(TAT)/len(TAT))
print("AWT=",sum(WT)/len(WT))

#SHORTEST JOB FIRST (Non-Preemptive)
Pid=[1,2,3,4,5]
AT=[2,5,1,0,4]
BT=[6,2,8,3,4]
CT=[0 for i in range(len(AT))]
t=min(AT)
for i in range(1,len(AT)):
  j=0
  while j<i:
    if AT[i]<AT[j]:
      temp1=AT[i]
      temp2=BT[i]
      temp3=Pid[i]
      for i in range(i,j,-1):
        AT[i]=AT[i-1]
        BT[i]=BT[i-1]
        Pid[i]=Pid[i-1]
      AT[j]=temp1
      BT[j]=temp2
      Pid[j]=temp3
    j+=1;

B=BT.copy()

for j in range(len(AT)):
  b=max(BT)
  x=-1
  for i in range(len(AT)):
    if AT[i]<=t and BT[i]>0 and BT[i]<=b:
      x=i
      b=BT[x]
  t+=BT[x]
  BT[x]=0
  CT[x]=t
TAT=[CT[i]-AT[i] for i in range(len(AT))]
WT=[TAT[i]-B[i] for i in range(len(AT))]
mydata=[]
for i in range(len(AT)):
  mydata.append([Pid[i],AT[i],B[i],CT[i],WT[i],TAT[i]])
head=["Pid","AT","BT","CT","WT","TAT"]
from tabulate import tabulate
print(tabulate(mydata, headers=head, tablefmt="grid"))
print("ATAT=",sum(TAT)/len(TAT))
print("AWT=",sum(WT)/len(WT))

#SHORTEST JOB FIRST (Preemptive)
Pid=[1,2,3,4]
AT=[0,1,2,4]
BT=[5,3,4,1]
CT=[0 for i in range(len(AT))]
t=min(AT)
for i in range(1,len(AT)):
  j=0
  while j<i:
    if AT[i]<AT[j]:
      temp1=AT[i]
      temp2=BT[i]
      temp3=Pid[i]
      for i in range(i,j,-1):
        AT[i]=AT[i-1]
        BT[i]=BT[i-1]
        Pid[i]=Pid[i-1]
      AT[j]=temp1
      BT[j]=temp2
      Pid[j]=temp3
    j+=1;

B=BT.copy()
while(sum(BT)>0):
  b=max(BT)
  x=-1
  for i in range(len(AT)):
    if AT[i]<=t and BT[i]>0 and BT[i]<b:
      x=i
      b=BT[x]
  if x==-1:
    x=BT.index(max(BT))
  t+=1
  BT[x]-=1
  if BT[x]==0:
    CT[x]=t


TAT=[CT[i]-AT[i] for i in range(len(AT))]
WT=[TAT[i]-B[i] for i in range(len(AT))]
mydata=[]
for i in range(len(AT)):
  mydata.append([Pid[i],AT[i],B[i],CT[i],WT[i],TAT[i]])
head=["Pid","AT","BT","CT","WT","TAT"]
from tabulate import tabulate
print(tabulate(mydata, headers=head, tablefmt="grid"))
print("ATAT=",sum(TAT)/len(TAT))
print("AWT=",sum(WT)/len(WT))

#First Cum First Serve
Pid=[1,2,3,4]
AT=[0,1,5,6]
BT=[2,2,3,4]
CT=[0 for i in range(len(AT))]
t=min(AT)
for i in range(1,len(AT)):
  j=0
  while j<i:
    if AT[i]<AT[j]:
      temp1=AT[i]
      temp2=BT[i]
      temp3=Pid[i]
      for i in range(i,j,-1):
        AT[i]=AT[i-1]
        BT[i]=BT[i-1]
        Pid[i]=Pid[i-1]
      AT[j]=temp1
      BT[j]=temp2
      Pid[j]=temp3
    j+=1;

B=BT.copy()
i=0
while sum(BT)>0:
  if AT[i]<=t and BT[i]>0:
    t+=BT[i]
    BT[i]=0
    CT[i]=t 
    i+=1
  else:
    t+=1
  
TAT=[CT[i]-AT[i] for i in range(len(AT))]
WT=[TAT[i]-B[i] for i in range(len(AT))]
mydata=[]
for i in range(len(AT)):
  mydata.append([Pid[i],AT[i],B[i],CT[i],WT[i],TAT[i]])
head=["Pid","AT","BT","CT","WT","TAT"]
from tabulate import tabulate
print(tabulate(mydata, headers=head, tablefmt="grid"))
print("ATAT=",sum(TAT)/len(TAT))
print("AWT=",sum(WT)/len(WT))

#Priority Scheduling (Preemptive)
Pid=[1,2,3,4]
AT=[0,1,2,4]
BT=[5,4,2,1]
P=[10,20,30,40]
CT=[0 for i in range(len(AT))]
t=min(AT)
for i in range(1,len(AT)):
  j=0
  while j<i:
    if AT[i]<AT[j]:
      temp1=AT[i]
      temp2=BT[i]
      temp3=Pid[i]
      for i in range(i,j,-1):
        AT[i]=AT[i-1]
        BT[i]=BT[i-1]
        Pid[i]=Pid[i-1]
      AT[j]=temp1
      BT[j]=temp2
      Pid[j]=temp3
    j+=1;
B=BT.copy()
while sum(BT)>0:
  pri=0
  x=-1
  for i in range(len(AT)):
    if AT[i]<=t and BT[i]>0 and pri<P[i]:
      x=i
      pri=P[i]
  if x==-1:
    x=BT.index(max(B))
  t+=1
  BT[x]-=1
  if BT[x]==0:
    CT[x]=t
  
TAT=[CT[i]-AT[i] for i in range(len(AT))]
WT=[TAT[i]-B[i] for i in range(len(AT))]
mydata=[]
for i in range(len(AT)):
  mydata.append([Pid[i],AT[i],B[i],CT[i],WT[i],TAT[i]])
head=["Pid","AT","BT","CT","WT","TAT"]
from tabulate import tabulate
print(tabulate(mydata, headers=head, tablefmt="grid"))
print("ATAT=",sum(TAT)/len(TAT))
print("AWT=",sum(WT)/len(WT))

#Longest Job First 
Pid=[1,2,3,4]
AT=[1,2,3,4]
BT=[2,4,6,8]
CT=[0 for i in range(len(AT))]
t=min(AT)
for i in range(1,len(AT)):
  j=0
  while j<i:
    if AT[i]<AT[j]:
      temp1=AT[i]
      temp2=BT[i]
      temp3=Pid[i]
      for i in range(i,j,-1):
        AT[i]=AT[i-1]
        BT[i]=BT[i-1]
        Pid[i]=Pid[i-1]
      AT[j]=temp1
      BT[j]=temp2
      Pid[j]=temp3
    j+=1;

B=BT.copy()

while sum(BT)>0:
  b=min(BT)-1
  x=-1
  for i in range(len(AT)):
    if AT[i]<=t and BT[i]>0 and BT[i]>b:
      x=i
      b=BT[x]
  if x==-1:
    t+=1
  else:
    t+=BT[x]
    BT[x]=0
    CT[x]=t 

TAT=[CT[i]-AT[i] for i in range(len(AT))]
WT=[TAT[i]-B[i] for i in range(len(AT))]
mydata=[]
for i in range(len(AT)):
  mydata.append([Pid[i],AT[i],B[i],CT[i],WT[i],TAT[i]])
head=["Pid","AT","BT","CT","WT","TAT"]
from tabulate import tabulate
print(tabulate(mydata, headers=head, tablefmt="grid"))
print("ATAT=",sum(TAT)/len(TAT))
print("AWT=",sum(WT)/len(WT))

#Highest Response Ratio Next
Pid=[1,2,3,4,5]
AT=[0,2,4,6,8]
BT=[3,6,4,5,2]
CT=[0 for i in range(len(AT))]
t=min(AT)
for i in range(1,len(AT)):
  j=0
  while j<i:
    if AT[i]<AT[j]:
      temp1=AT[i]
      temp2=BT[i]
      temp3=Pid[i]
      for i in range(i,j,-1):
        AT[i]=AT[i-1]
        BT[i]=BT[i-1]
        Pid[i]=Pid[i-1]
      AT[j]=temp1
      BT[j]=temp2
      Pid[j]=temp3
    j+=1;

B=BT.copy()

while sum(BT)>0:
  h=-1
  x=-1
  for i in range(len(AT)):
    if AT[i]<=t and BT[i]>0:
      hr=(t-AT[i]+BT[i])/BT[i]
      if hr>h:
        x=i
        h=hr
  if x==-1:
    t+=1
  else:
    t+=BT[x]
    BT[x]=0
    CT[x]=t 

TAT=[CT[i]-AT[i] for i in range(len(AT))]
WT=[TAT[i]-B[i] for i in range(len(AT))]
mydata=[]
for i in range(len(AT)):
  mydata.append([Pid[i],AT[i],B[i],CT[i],WT[i],TAT[i]])
head=["Pid","AT","BT","CT","WT","TAT"]
from tabulate import tabulate
print(tabulate(mydata, headers=head, tablefmt="grid"))
print("ATAT=",sum(TAT)/len(TAT))
print("AWT=",sum(WT)/len(WT))